(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{305:function(t,e,s){"use strict";s.r(e);var o=s(1),n=Object(o.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"customizing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#customizing"}},[t._v("#")]),t._v(" Customizing")]),t._v(" "),s("p",[s("em",[t._v("Vue Component Development Kit")]),t._v(" can be customized.")]),t._v(" "),s("h2",{attrs:{id:"css"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css"}},[t._v("#")]),t._v(" CSS")]),t._v(" "),s("p",[t._v("The amount of custom CSS is kept at a minimum. "),s("em",[t._v("Vue Component Development Kit")]),t._v(" only introduces custom CSS if it is required for a specific feature. For example, the "),s("router-link",{attrs:{to:"/components/list/"}},[t._v("List component")]),t._v(" applies "),s("code",[t._v("overflow: hidden")]),t._v(" to the list container element – otherwise the list would not be scrollable and break your layout. Sometimes "),s("em",[t._v("Vue Component Development Kit")]),t._v(" relies on a third party library that requires custom CSS. If that is the case we don't try to work around that. We simply accept it and move on.")],1),t._v(" "),s("p",[t._v("Custom CSS follows a set of guidelines:")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Consistently prefixed classes:")]),t._v(" Custom CSS classes are consistently prefixed with\n"),s("code",[s("abbr",{attrs:{title:"Vue Component Development Kit"}},[t._v("vcdk")]),t._v("-")]),t._v(".")]),t._v(" "),s("li",[s("strong",[t._v("No polluting of the global scope:")]),t._v(" You will never see "),s("abbr",{attrs:{title:"Vue Component Development Kit"}},[t._v("VCDK")]),t._v(" apply styles to elements such as "),s("code",[t._v("button")]),t._v(", "),s("code",[t._v("a")]),t._v(", etc.")]),t._v(" "),s("li",[s("strong",[t._v("Distributed:")]),t._v(" Usually our custom CSS is distributed within the actual component/plugin/utility. For example there is a themeable popover-component ("),s("code",[t._v("@vue-cdk/popover")]),t._v(") that works even without any styles/themes. If you want to use one of the officially available themes then simply import the theme styles from "),s("code",[t._v("@vue-cdk/popover/themes/$theme-name")]),t._v(".")])]),t._v(" "),s("p",[t._v("Importing from within CSS:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// import all themes:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@vue-cdk/popover/themes/index.css'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//                – or –                   //")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// import 'only' a specific theme:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@vue-cdk/popover/themes/clean.css'")]),t._v("\n")])])]),s("ul",[s("li",[s("strong",[t._v("Use plain CSS:")]),t._v(" Having to use custom CSS (within the context of "),s("abbr",{attrs:{title:"Vue Component Development Kit"}},[t._v("VCDK")]),t._v(") is already a little bit against what we actually want – so using the CSS and working with it should not introduce additional complexities. Keep it simple.")])])])}),[],!1,null,null,null);e.default=n.exports}}]);