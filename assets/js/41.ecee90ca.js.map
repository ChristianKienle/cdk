{"version":3,"sources":["webpack:///../node_modules/@vuepress/core/.temp/temp-pages/v-19c1caaa.md","webpack:///../node_modules/@vuepress/core/.temp/temp-pages/v-19c1caaa.md?2350","webpack:///../node_modules/@vuepress/core/.temp/temp-pages/v-19c1caaa.md?a7e6"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAwF;AACxF;;;AAGA;AACmF;AACnF,gBAAgB,8FAAU;AAC1B;AACA,EAAE,oFAAM;AACR,EAAE,6FAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,gF;;;;;;;;;;;;ACjBf;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA,0BAA0B,aAAa,0BAA0B,wBAAwB,qCAAqC,OAAO,gCAAgC,YAAY,sCAAsC,sVAAsV,6CAA6C,YAAY,qDAAqD,0CAA0C,4CAA4C,ufAAuf,4CAA4C;AACpxC","file":"assets/js/41.ecee90ca.js","sourcesContent":["import { render, staticRenderFns } from \"./v-19c1caaa.md?vue&type=template&id=bd5c43be&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"../node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"70195ca0-vue-loader-template\\\"}!../../../../vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../vue-loader/lib/index.js??ref--1-1!../../../markdown-loader/index.js??ref--1-2!./v-19c1caaa.md?vue&type=template&id=bd5c43be&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{\"slot-key\":_vm.$parent.slotKey}},[_c('div',{staticClass:\"component-documentation\"},[_c('p',[_vm._v(\"A component to wrap non SSR friendly components/markup. You can provide a placeholder text that will be shown until the component has been mounted. Alternatively you can also provide a placeholder-slot. The slot is useful if you want to render something other than text – like a loading indicator.\")]),_vm._v(\" \"),_c('div',{staticClass:\"component-documentation__props\"},[_c('div',{staticClass:\"component-documentation__props-heading\"},[_vm._v(\"Props\")]),_vm._v(\" \"),_c('div',{staticClass:\"component-documentation__prop\"},[_c('p',[_c('strong',[_vm._v(\"Name:\")]),_vm._v(\" placeholder\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"Type:\")]),_vm._v(\" \"),_c('code',[_vm._v(\"String\")])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"Default:\")]),_vm._v(\" \"),_c('code',[_vm._v(\"–\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"Text that will be rendered as a placeholder until \"),_c('CClientOnly'),_vm._v(\" is mounted on the client-side. You can use this to show a loading indicator or some other kind of placeholder.\")],1)]),_vm._v(\" \"),_c('div',{staticClass:\"component-documentation__prop\"},[_c('p',[_c('strong',[_vm._v(\"Name:\")]),_vm._v(\" placeholderTag\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"Type:\")]),_vm._v(\" \"),_c('code',[_vm._v(\"String\")])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"Default:\")]),_vm._v(\" \"),_c('code',[_vm._v(\"div\")])]),_vm._v(\" \"),_c('p',[_c('code',[_vm._v(\"div\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"By default the placeholder will be wrapped in a div tag, however you can use \"),_c('code',[_vm._v(\"placeholderTag\")]),_vm._v(\" prop to customize it.\")])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}